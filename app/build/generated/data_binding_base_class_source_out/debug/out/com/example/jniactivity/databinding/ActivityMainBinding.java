// Generated by view binder compiler. Do not edit!
package com.example.jniactivity.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.jniactivity.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button alert;

  @NonNull
  public final Button battery;

  @NonNull
  public final Button bimage;

  @NonNull
  public final Button bluetooth;

  @NonNull
  public final Button cards;

  @NonNull
  public final Button custom;

  @NonNull
  public final Button cycle;

  @NonNull
  public final Button frag;

  @NonNull
  public final Button inti;

  @NonNull
  public final Button layoutss;

  @NonNull
  public final Button listadapt;

  @NonNull
  public final Button maps;

  @NonNull
  public final Button option;

  @NonNull
  public final Button proximity;

  @NonNull
  public final Button relate;

  @NonNull
  public final Button scroll;

  @NonNull
  public final Button sensor;

  @NonNull
  public final Button service;

  @NonNull
  public final Button shara;

  @NonNull
  public final Button splash;

  private ActivityMainBinding(@NonNull LinearLayout rootView, @NonNull Button alert,
      @NonNull Button battery, @NonNull Button bimage, @NonNull Button bluetooth,
      @NonNull Button cards, @NonNull Button custom, @NonNull Button cycle, @NonNull Button frag,
      @NonNull Button inti, @NonNull Button layoutss, @NonNull Button listadapt,
      @NonNull Button maps, @NonNull Button option, @NonNull Button proximity,
      @NonNull Button relate, @NonNull Button scroll, @NonNull Button sensor,
      @NonNull Button service, @NonNull Button shara, @NonNull Button splash) {
    this.rootView = rootView;
    this.alert = alert;
    this.battery = battery;
    this.bimage = bimage;
    this.bluetooth = bluetooth;
    this.cards = cards;
    this.custom = custom;
    this.cycle = cycle;
    this.frag = frag;
    this.inti = inti;
    this.layoutss = layoutss;
    this.listadapt = listadapt;
    this.maps = maps;
    this.option = option;
    this.proximity = proximity;
    this.relate = relate;
    this.scroll = scroll;
    this.sensor = sensor;
    this.service = service;
    this.shara = shara;
    this.splash = splash;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.alert;
      Button alert = ViewBindings.findChildViewById(rootView, id);
      if (alert == null) {
        break missingId;
      }

      id = R.id.battery;
      Button battery = ViewBindings.findChildViewById(rootView, id);
      if (battery == null) {
        break missingId;
      }

      id = R.id.bimage;
      Button bimage = ViewBindings.findChildViewById(rootView, id);
      if (bimage == null) {
        break missingId;
      }

      id = R.id.bluetooth;
      Button bluetooth = ViewBindings.findChildViewById(rootView, id);
      if (bluetooth == null) {
        break missingId;
      }

      id = R.id.cards;
      Button cards = ViewBindings.findChildViewById(rootView, id);
      if (cards == null) {
        break missingId;
      }

      id = R.id.custom;
      Button custom = ViewBindings.findChildViewById(rootView, id);
      if (custom == null) {
        break missingId;
      }

      id = R.id.cycle;
      Button cycle = ViewBindings.findChildViewById(rootView, id);
      if (cycle == null) {
        break missingId;
      }

      id = R.id.frag;
      Button frag = ViewBindings.findChildViewById(rootView, id);
      if (frag == null) {
        break missingId;
      }

      id = R.id.inti;
      Button inti = ViewBindings.findChildViewById(rootView, id);
      if (inti == null) {
        break missingId;
      }

      id = R.id.layoutss;
      Button layoutss = ViewBindings.findChildViewById(rootView, id);
      if (layoutss == null) {
        break missingId;
      }

      id = R.id.listadapt;
      Button listadapt = ViewBindings.findChildViewById(rootView, id);
      if (listadapt == null) {
        break missingId;
      }

      id = R.id.maps;
      Button maps = ViewBindings.findChildViewById(rootView, id);
      if (maps == null) {
        break missingId;
      }

      id = R.id.option;
      Button option = ViewBindings.findChildViewById(rootView, id);
      if (option == null) {
        break missingId;
      }

      id = R.id.proximity;
      Button proximity = ViewBindings.findChildViewById(rootView, id);
      if (proximity == null) {
        break missingId;
      }

      id = R.id.relate;
      Button relate = ViewBindings.findChildViewById(rootView, id);
      if (relate == null) {
        break missingId;
      }

      id = R.id.scroll;
      Button scroll = ViewBindings.findChildViewById(rootView, id);
      if (scroll == null) {
        break missingId;
      }

      id = R.id.sensor;
      Button sensor = ViewBindings.findChildViewById(rootView, id);
      if (sensor == null) {
        break missingId;
      }

      id = R.id.service;
      Button service = ViewBindings.findChildViewById(rootView, id);
      if (service == null) {
        break missingId;
      }

      id = R.id.shara;
      Button shara = ViewBindings.findChildViewById(rootView, id);
      if (shara == null) {
        break missingId;
      }

      id = R.id.splash;
      Button splash = ViewBindings.findChildViewById(rootView, id);
      if (splash == null) {
        break missingId;
      }

      return new ActivityMainBinding((LinearLayout) rootView, alert, battery, bimage, bluetooth,
          cards, custom, cycle, frag, inti, layoutss, listadapt, maps, option, proximity, relate,
          scroll, sensor, service, shara, splash);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
